using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace CurrencyApp
{
    public partial class Form1 : Form
    {
        // Dictionary to store exchange rates (example rates)
        Dictionary<string, double> exchangeRates = new Dictionary<string, double>()
        {
            { "USD", 1.0 },      // Base currency
            { "EUR", 0.93 },     // 1 USD = 0.93 EUR
            { "GBP", 0.78 },     // 1 USD = 0.78 GBP
            { "INR", 85.77 },    // 1 USD = 85.77 INR
            { "BDT", 121.64 },   // 1 USD = 121.64 BDT
            { "JPY", 150.24 },   // 1 USD = 150.24 JPY
            { "CAD", 1.43 },     // 1 USD = 1.43 CAD
            { "AUD", 1.58 }      // 1 USD = 1.58 AUD
        };
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            // Load currency options into combo boxes
            cmbFromCurrency.DataSource = new BindingSource(exchangeRates, null);
            cmbFromCurrency.DisplayMember = "Key";
            cmbFromCurrency.ValueMember = "Value";

            cmbToCurrency.DataSource = new BindingSource(exchangeRates, null);
            cmbToCurrency.DisplayMember = "Key";
            cmbToCurrency.ValueMember = "Value";

            

        }

        private void btnConvert_Click(object sender, EventArgs e)
        {
            
        }

        private void btnConvert_Click_1(object sender, EventArgs e)
        {
            try
            {
                double amount = double.Parse(txtAmount.Text);

                if (cmbFromCurrency.SelectedItem == null || cmbToCurrency.SelectedItem == null)
                {
                    MessageBox.Show("Please select both currencies.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                string fromCurrency = ((KeyValuePair<string, double>)cmbFromCurrency.SelectedItem).Key;
                string toCurrency = ((KeyValuePair<string, double>)cmbToCurrency.SelectedItem).Key;

                double fromRate = exchangeRates[fromCurrency];
                double toRate = exchangeRates[toCurrency];

                // Convert amount to USD, then to target currency
                double convertedAmount = (amount / fromRate) * toRate;

                lblResult.Text = $"Converted Amount: {convertedAmount:F2} {toCurrency}";
            }
            catch (Exception ex)
            {
                MessageBox.Show("Invalid input. Please enter a valid number.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
    }
}
